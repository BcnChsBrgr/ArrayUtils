# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
#
# ******** NOTE ********
# We have attempted to detect the languages in your repository. Please check
# the `language` matrix defined below to confirm you have the correct set of
# supported CodeQL languages.
#
name: "CodeQL"
on:
    push:
        branches: ["main"]
    pull_request:
        # The branches below must be a subset of the branches above
        branches: ["main"]
#     schedule:
#         - cron: "27 21 * * 3"

jobs:
    check-codeql-versions:
        runs-on: ubuntu-latest
        outputs:
            versions: ${{ steps.compare.outputs.versions }}
        permissions:
            security-events: write

        steps:
        - uses: actions/checkout@v3
        - name: Init with default CodeQL bundle from the VM image
            id: init-default
            with:
                languages: javascript
        - name: Remove empty database
            run: |
                rm -fr "$RUNNER_TEMP/codeql_databases"
        - name: Init with the latest CodeQL bundle
            id: init-latest
            uses: ./init
            with: tools
            languages: javascript
        - name: Compare default and latest CodeQL bundle versions
            id: compare
            env:
                CODEQL_DEFAULT: ${{ steps.init-default.outputs.codeql-path }}
                CODEQL_LATEST: ${{ steps.init-latest.outputs.codeql-path }}
                run: |
                    CODEQL_VERSION_DEFAULT="$("$CODEQL_DEFAULT" version --format terse)"
                    CODEQL_VERSION_LATEST="$("$CODEQL_LATEST" version --format terse)"
                    echo "Default CodeQL bundle version is $CODEQL_VERSION_DEFAULT"
                    echo "Latest CodeQL bundle version is $CODEQL_VERSION_LATEST"

                    if [[ "$GITHUB_EVENT_NAME" != "pull_request" && "$CODEQL_VERSION_DEFAULT" == "$CODEQL_VERSION_LATEST" ]]; then
                        VERSIONS_JSON='[null]'
                    else
                        VERSIONS_JSON='[null, "latest"]'
                    fi
                    # Output a JSON-encoded list with the distinct versions to test against.
                    echo "Suggested matrix config for analysis job: $VERSIONS_JSON"
                    echo "::set-output name=versions::${VERSIONS_JSON}"
    build:
        needs: [check-codeql-versions]
        strategy:
            matrix:
                os: [ubuntu-latest,windows-latest,macos-latest]
                tools: ${{ fromJson(needs.check-codeql-versions.outputs.versions) }}
        runs-on: ${{ matrix.os}}

        permissions:
            security-events: write

        steps:
        - uses: actions/checkout@v3
        - uses: ./init
            id: init
            with:
                languages: javascript
                config-file: ./.github/codeql/codeql-config.yml
                tools: ${{ matrix.tools }}
        - name: Print CodeQL Version
            run: ${{steps.init.outputs.codeql-path}} version --format=json
        - uses: ./analyze